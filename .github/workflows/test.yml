name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run linting
      run: npm run lint

    - name: Run frontend tests
      run: npm run test:frontend

    - name: Run frontend tests with coverage
      run: npm run test:frontend:coverage

    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Setup uv
      uses: astral-sh/setup-uv@v2

    - name: Install Python dependencies
      run: |
        cd backend
        uv sync --frozen

    - name: Run backend unit tests
      run: |
        cd backend
        uv run pytest tests/unit/ -v --tb=short

    - name: Run backend integration tests
      run: |
        cd backend
        uv run pytest tests/integration/ -v --tb=short

    - name: Run backend API tests
      run: |
        cd backend
        uv run pytest tests/api/ -v --tb=short

    - name: Run backend tests with coverage
      run: |
        cd backend
        uv run coverage run -m pytest tests/
        uv run coverage report
        uv run coverage xml

    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  build-test:
    runs-on: ubuntu-latest
    name: Build Test
    needs: [frontend-tests, backend-tests]

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build Next.js application
      run: npm run build

    - name: Check build artifacts
      run: |
        ls -la .next/
        ls -la out/ || echo "Static export not found (expected for some configurations)"